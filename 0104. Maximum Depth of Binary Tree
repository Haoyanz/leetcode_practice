/*
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.
*/

class Solution {
    int max = 0;
    public int maxDepth(TreeNode root) {
        return helper(root, 0);
    }
    public int helper(TreeNode root, int depth){
        max = Math.max(max, depth);
        if(root == null){
            return depth;
        }
        return Math.max(helper(root.left, depth + 1), helper(root.right, depth + 1));
    }
}
