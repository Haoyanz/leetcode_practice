/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
*/

class Solution {
    public boolean isValid(String s) {
        String parentheses = "(){}[]";
        Deque<Integer> stack = new ArrayDeque<>();
        for(int i = 0; i < s.length(); i++){
            int index = parentheses.indexOf(s.charAt(i));
            if(index % 2 == 0){
                stack.offerFirst(index);
            } else if (stack.isEmpty() || stack.peekFirst() != index - 1){
                return false;
            } else {
                stack.pollFirst();
            }
        }
        return stack.isEmpty();
    }
}
