/*
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        helper(nums, 0, list, new ArrayList<>());
        return list;
    }
    public void helper(int[] nums, int index, List<List<Integer>> list, List<Integer> cur){
        if(index == nums.length){
            list.add(new ArrayList<>(cur));
            return;
        }
        helper(nums, index + 1, list, cur);
        cur.add(nums[index]);
        helper(nums, index + 1, list, cur);
        cur.remove(cur.size() - 1);
    }
}
